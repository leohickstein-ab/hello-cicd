version: 0.2

env:
  secrets-manager:
    JENKINS_API_USERNAME: jenkins_config:JENKINS_API_USERNAME
    JENKINS_API_TOKEN: jenkins_config:JENKINS_API_TOKEN
    LOGIN: SonarQube:sonartoken

phases:
  install:
    runtime-versions:
      java: corretto8
    commands:
      - echo Installing AWSCLI for codeartifact authorization token
      - pip install awscli --upgrade --user 
  pre_build:
    commands:
      #- export STAMP="1.0-`date +%Y%m%d.%H%M%S`"
      - export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain leohickstein-repository-manager --domain-owner 611095324135 --query authorizationToken --output text`
      - echo "${CODEARTIFACT_AUTH_TOKEN}"
  build:
    commands:
      #- mvn --no-transfer-progress versions:set -DnewVersion=$STAMP
      - mvn --no-transfer-progress -s settings.xml clean package deploy
      
      - |
        if [[ "$CODEBUILD_WEBHOOK_EVENT" == "PUSH" && "$CODEBUILD_WEBHOOK_HEAD_REF" == "refs/heads/master" ]]; then
          echo "MASTER Branch Analysis"
          BRANCH=$(echo $CODEBUILD_WEBHOOK_TRIGGER | cut -d"/" -f2)
          echo $BRANCH
          docker run --rm \
          -e LOGIN=$LOGIN \
          -e BRANCH=$BRANCH \
          -e PR=$PR \
          -v $(pwd):/usr/src:rw \
          -w "/usr/src" \
          $SONAR_IMAGE sonar-scanner \
          -Dsonar.login=$LOGIN \
          -Dsonar.branch.name=$BRANCH
        else
           echo "Pull Request Analysis"
           PR=$(echo $CODEBUILD_WEBHOOK_TRIGGER | tr -d "pr/")
           echo $PR
           docker run --rm \
           -e LOGIN=$LOGIN \
           -e CODEBUILD_WEBHOOK_HEAD_REF=$CODEBUILD_WEBHOOK_HEAD_REF \
           -e CODEBUILD_WEBHOOK_BASE_REF=$CODEBUILD_WEBHOOK_BASE_REF \
           -e PR=$PR \
           -v $(pwd):/usr/src:rw \
           -w "/usr/src" \
           $SONAR_IMAGE sonar-scanner \
           -Dsonar.login=$LOGIN \
           -Dsonar.pullrequest.key=$PR \
           -Dsonar.pullrequest.branch=$CODEBUILD_WEBHOOK_HEAD_REF \
           -Dsonar.pullrequest.base=master
        fi
  post_build: 
    commands: 

artifacts:
  files:
    - target/*.jar
  name: hello-cicd-$(date +%Y-%m-%d) 

cache:
  paths:
    - "/root/.m2/**/*"
